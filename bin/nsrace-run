#!/usr/bin/env node

const cli = require('commander')
const chalk = require('chalk')
const print = require('../lib/print')
const { run } = require('../lib')

const { OUTPUT } = print
const DEFAULT_PING_TIMEOUT = 1000
const DEFAULT_FETCH_TIMEOUT = 1000

;(async () => {
  try {
    cli
    .option('-o, --output [format]', `Specify the format of the output [${Object.values(OUTPUT).join('|')}]`, OUTPUT.TABLE)
    .option('--ping-timeout [ms]', 'Ping timeout', DEFAULT_PING_TIMEOUT)
    .option('--fetch-timeout [ms]', 'Fetch timeout', DEFAULT_FETCH_TIMEOUT)
    .option('-s, --silent', 'Hide the progress')
    .option('-v, --verbose', 'Display verbose information')
    .parse(process.argv)

    function verbose (message) {
      if (!cli.verbose) {
        return
      }
      console.info(chalk.blue('nsrace > ') + message)
    }

    const progress = cli.silent ? () => {} : require('../lib/progress')

    const { times, isDomainURI } = await run({
      uri: cli.args[0],
      pingTimeout: +cli.pingTimeout,
      fetchTimeout: +cli.fetchTimeout,
      progress,
      verbose,
    })

    if (isDomainURI) {
      print(cli.output, times, ['IP', 'Ping (ms)', 'Providers'])
    } else {
      print(cli.output, times, ['IP', 'Duration (ms)', 'Providers'])
    }
  } catch (error) {
    console.log(error)
  }
})()
